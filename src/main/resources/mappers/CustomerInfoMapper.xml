<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fjs.cronus.mappers.CustomerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.fjs.cronus.model.CustomerInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="telephonenumber" property="telephonenumber" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="customer_type" property="customerType" jdbcType="VARCHAR" />
    <result column="customer_level" property="customerLevel" jdbcType="VARCHAR" />
    <result column="spare_phone" property="sparePhone" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="marriage" property="marriage" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="province_huji" property="provinceHuji" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
      <result column="customer_street" property="customerStreet" jdbcType="VARCHAR" />
      <result column="customer_address" property="customerAddress" jdbcType="VARCHAR" />
    <result column="house_status" property="houseStatus" jdbcType="VARCHAR" />
    <result column="house_amount" property="houseAmount" jdbcType="VARCHAR" />
    <result column="house_type" property="houseType" jdbcType="VARCHAR" />
    <result column="house_value" property="houseValue" jdbcType="VARCHAR" />
    <result column="house_area" property="houseArea" jdbcType="VARCHAR" />
    <result column="house_age" property="houseAge" jdbcType="VARCHAR" />
    <result column="house_loan" property="houseLoan" jdbcType="VARCHAR" />
    <result column="house_alone" property="houseAlone" jdbcType="VARCHAR" />
    <result column="house_location" property="houseLocation" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="customer_classify" property="customerClassify" jdbcType="VARCHAR" />
    <result column="callback_status" property="callbackStatus" jdbcType="VARCHAR" />
    <result column="callback_time" property="callbackTime" jdbcType="TIMESTAMP" />
    <result column="sub_company_id" property="subCompanyId" jdbcType="INTEGER" />
    <result column="house_loan_value" property="houseLoanValue" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="last_update_user" property="lastUpdateUser" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
      <result column="expect_money_time" property="expectMoneyTime" jdbcType="TIMESTAMP" />
      <result column="expect_loan_time" property="expectLoanTime" jdbcType="VARCHAR" />
      <result column="expect_repayment_way" property="expectRepaymentWay" jdbcType="INTEGER" />
      <result column="house_clear" property="houseClear" jdbcType="INTEGER" />
      <result column="house_owner" property="houseOwner" jdbcType="VARCHAR" />
      <result column="mortgage_amount" property="mortgageAmount" jdbcType="VARCHAR" />
      <result column="mortgae_month" property="mortgaeMonth" jdbcType="VARCHAR" />
      <result column="is_hava_car" property="isHavaCar" jdbcType="INTEGER" />
      <result column="car_worth" property="carWorth" jdbcType="VARCHAR" />
      <result column="car_age" property="carAge" jdbcType="INTEGER" />
      <result column="is_hava_insurance" property="isHavaInsurance" jdbcType="INTEGER" />
      <result column="year_pay_amount" property="yearPayAmount" jdbcType="VARCHAR" />
      <result column="insurance_time" property="insuranceTime" jdbcType="INTEGER" />
      <result column="is_hava_debt" property="isHavaDebt" jdbcType="INTEGER" />
      <result column="debt_money" property="debtMoney" jdbcType="VARCHAR" />
      <result column="debt_month" property="debtMonth" jdbcType="INTEGER" />
      <result column="debt_overdue" property="debtOverdue" jdbcType="INTEGER" />
      <result column="debt_overdue_money" property="debtOverdueMoney" jdbcType="VARCHAR" />
      <result column="debt_time" property="debtTime" jdbcType="INTEGER" />
      <result column="work_status" property="workStatus" jdbcType="INTEGER" />
      <result column="wager_card" property="wagerCard" jdbcType="VARCHAR" />
      <result column="entry_time" property="entryTime" jdbcType="INTEGER" />
      <result column="company_type" property="companyType" jdbcType="INTEGER" />
      <result column="social_security" property="socialSecurity" jdbcType="INTEGER" />
      <result column="social_money" property="socialMoney" jdbcType="VARCHAR" />
      <result column="social_time" property="socialTime" jdbcType="INTEGER" />
      <result column="provident_fund" property="providentFund" jdbcType="INTEGER" />
      <result column="provident_money" property="providentMoney" jdbcType="VARCHAR" />
      <result column="provident_time" property="providentTime" jdbcType="INTEGER" />
      <result column="compny_name" property="compnyName" jdbcType="VARCHAR" />
      <result column="fixed_phone" property="fixedPhone" jdbcType="INTEGER" />
      <result column="loan_amount" property="loanAmount" jdbcType="DECIMAL" />
      <result column="customer_source" property="customerSource" jdbcType="VARCHAR" />
      <result column="utm_source" property="utmSource" jdbcType="VARCHAR" />
      <result column="own_user_id" property="ownUserId" jdbcType="INTEGER" />
      <result column="own_user_name" property="ownUserName" jdbcType="VARCHAR" />
      <result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
      <result column="circle" property="circle" jdbcType="INTEGER" />
      <result column="company_id" property="companyId" jdbcType="INTEGER" />
      <result column="retirement_wages" property="retirementWages" jdbcType="VARCHAR" />
      <result column="level" jdbcType="VARCHAR" property="level" />
      <result column="remain" jdbcType="INTEGER" property="remain" />
      <result column="view_time" jdbcType="TIMESTAMP" property="viewTime" />
      <result column="view_uid" jdbcType="INTEGER" property="viewUid" />
      <result column="view_count" jdbcType="INTEGER" property="viewCount" />
      <result column="autostatus" jdbcType="INTEGER" property="autostatus" />
      <result column="first_communicate_time" jdbcType="TIMESTAMP" property="firstCommunicateTime" />
      <result column="first_allocate_time" jdbcType="TIMESTAMP" property="firstAllocateTime" />
      <result column="cooperation_status" jdbcType="VARCHAR" property="cooperationStatus" />
      <result column="confirm" jdbcType="INTEGER" property="confirm" />
      <result column="click_communicate_button" jdbcType="INTEGER" property="clickCommunicateButton" />
      <result column="communicate_time" jdbcType="TIMESTAMP" property="communicateTime" />
      <result column="communicate_id" jdbcType="INTEGER" property="communicateId" />
      <result column="receive_id" jdbcType="INTEGER" property="receiveId" />
      <result column="ocdc_id" jdbcType="INTEGER" property="ocdcId" />
      <result column="media_customer_count_id" jdbcType="INTEGER" property="mediaCustomerCountId" />
  </resultMap>

<resultMap id="businessPool" type="com.fjs.cronus.model.BusinessPool">
    <result column="id" property="id" jdbcType="INTEGER"/>
    <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
    <result column="loan_amount" property="loanAmount" jdbcType="VARCHAR"/>
    <result column="house_status" property="houseStatus" jdbcType="VARCHAR"/>
    <result column="customer_source" property="customerSource" jdbcType="VARCHAR"/>
    <result column="utm_source" property="utmSource" jdbcType="VARCHAR"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="media_customer_count_id" property="mediaCustomerCountId" jdbcType="INTEGER"/>
    <result column="accounting_method" property="accountingMethod" jdbcType="INTEGER"/>
    <result column="prepurchase_price" property="prepurchasePrice" jdbcType="DECIMAL"/>
    <result column="commission_rate" property="commissionRate" jdbcType="DECIMAL"/>
    <result column="loan_rate" property="loanRate" jdbcType="DECIMAL"/>
</resultMap>

  <resultMap id="ResultMapWithBLOBs" type="com.fjs.cronus.model.CustomerInfo" extends="BaseResultMap" >
      <result column="per_description" jdbcType="LONGVARCHAR" property="perDescription" />
      <result column="employed_info" jdbcType="LONGVARCHAR" property="employedInfo" />
      <result column="ext" jdbcType="LONGVARCHAR" property="ext" />
  </resultMap>
    <resultMap id="CustomerResultDTO" type="com.fjs.cronus.dto.CustomerPartDTO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="customer_source" property="customerSource" jdbcType="VARCHAR" />
        <result column="utm_source" property="utmSource" jdbcType="VARCHAR" />
        <result column="city" property="city" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="CustomerBasicDTO" type="com.fjs.cronus.dto.CustomerBasicDTO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="telephonenumber" property="telephonenumber" jdbcType="VARCHAR" />
        <result column="customer_source" property="customerSource" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
        id, telephonenumber, customer_name, customer_type, customer_level, spare_phone, age,
        marriage, id_card, province_huji, sex, customer_address, customer_street, house_status,
        house_amount, house_type, house_value, house_area, house_age, house_loan, house_alone,
        house_location, city, customer_classify, callback_status, callback_time, sub_company_id,
        house_loan_value, create_time, last_update_time, create_user, last_update_user, is_deleted,
        expect_money_time, expect_loan_time, expect_repayment_way, house_clear, house_owner,
        mortgage_amount, mortgae_month, is_hava_car, car_worth, car_age, is_hava_insurance,
        year_pay_amount, insurance_time, is_hava_debt, debt_money, debt_month, debt_overdue,
        debt_overdue_money, debt_time, work_status, wager_card, entry_time, company_type,
        social_security, social_money, social_time, provident_fund, provident_money, provident_time,
        compny_name, fixed_phone, loan_amount, customer_source, utm_source, own_user_id,
        own_user_name, receive_time, circle, company_id, retirement_wages, level, remain,
        view_time, view_uid, view_count, autostatus, first_communicate_time, first_allocate_time,
        cooperation_status, confirm, click_communicate_button,communicate_time,communicate_id,receive_id,ocdc_id
    </sql>
    <sql id="cronus_column_List">
        id, telephonenumber, customer_name,house_status,loan_amount,customer_source, utm_source,customer_type,
        city,own_user_name,own_user_id,receive_time,create_time,remain,level,last_update_time,confirm,communicate_time,id_card,
        cooperation_status
    </sql>
    <sql id="Blob_Column_List">
    per_description, employed_info, ext
  </sql>
  <select id="customerListCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
    select count(*) from customer_info c
    WHERE  1 = 1
    <if test="customerName !=null and customerName !=''">
      AND  c.customer_name  like CONCAT(#{customerName},'%' )
    </if>
      <if test="telephonenumber != null and telephonenumber!=''">
      AND c.telephonenumber = #{telephonenumber}
      </if>
      <if test="utmSource != null and utmSource != '' ">
          and c.utm_source = #{utmSource}
      </if>
      <if test="utmSources != null and utmSources.size > 0 ">
          and c.utm_source IN
          <foreach collection="utmSources" item="item"
                   index="index" open="(" close=")" separator=",">
              #{item}
          </foreach>
      </if>
      <if test="cooperationStatus != null and cooperationStatus != '' ">
          and c.cooperation_status = #{cooperationStatus}
      </if>
      <if test="houseStatus != null and houseStatus != '' and houseStatus == '有'.toString()">
          and (c.house_status = '有' or c.house_status = '是')
      </if>
      <if test="houseStatus != null and houseStatus != '' and houseStatus == '无'.toString()">
          and (c.house_status = '无' or c.house_status = '无')
      </if>
      <if test="ownUserName != null and ownUserName != '' ">
          and c.own_user_name = #{ownUserName}
      </if>
      <if test="customerSource != null and customerSource != '' ">
          and c.customer_source = #{customerSource}
      </if>
      <if test="circle != null  ">
          and c.circle = #{circle,}
      </if>
      <if test="companyId != null ">
          and c.company_id = #{companyId}
      </if>
      <if test="remain != null ">
          and c.remain = #{remain}
      </if>
      <if test="loanAmount != null and loanAmount ==0 ">
          and c.loan_amount = 0
      </if>
      <if test="loanAmount != null and loanAmount ==1 ">
          and c.loan_amount &lt;= 5 and c.loan_amount &gt; 0
      </if>
      <if test="loanAmount != null and loanAmount ==2 ">
          and c.loan_amount &lt;= 10 and c.loan_amount &gt; 5
      </if>
      <if test="loanAmount != null and loanAmount ==3 ">
          and c.loan_amount &lt;= 50 and c.loan_amount &gt; 10
      </if>
      <if test="loanAmount != null and loanAmount ==4 ">
          and c.loan_amount &lt;= 100 and c.loan_amount &gt; 50
      </if>
      <if test="loanAmount != null and loanAmount ==5 ">
          and c.loan_amount &lt;= 500 and c.loan_amount &gt; 100
      </if>
      <if test="loanAmount != null and loanAmount ==6 ">
          and c.loan_amount &gt; 500
      </if>
      <if test="level != null ">
          and c.customer_type = #{level}
      </if>
      <if test="createTimeStart != null and createTimeEnd != null">
          and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
      </if>
      <if test="owerId!=null and owerId.size>0">
          AND c.own_user_id in
          <foreach collection="owerId" item="owerId"
                   index="index" open="(" close=")" separator=",">
              ${owerId}
          </foreach>
      </if>
      <if test="cooperation_status!=null and cooperation_status.size>0">
          AND c.cooperation_status in
          <foreach item="item" index="index" collection="cooperation_status" open="("
                   separator="," close=")">
              #{item}
          </foreach>
      </if>
      <if test="communication_order!=null">
          <choose>
              <when test="communication_order == 0">
                  and c.communicate_time is NULL
              </when>
              <when test="communication_order == 1">
                  and c.communicate_time is NOT NULL and c.confirm = 1
              </when>
              <when test="communication_order == 2">
                  and c.communicate_time is NOT NULL and c.confirm = 2
              </when>
          </choose>
      </if>
  </select>

  <select id="customerList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="cronus_column_List" />
    from customer_info  c
    WHERE  c.is_deleted = 0
    <if test="customerName !=null and customerName !=''">
      and c.customer_name  like CONCAT(#{customerName},'%' )
    </if>
      <if test="telephonenumber != null and telephonenumber!=''">
          AND c.telephonenumber = #{telephonenumber}
      </if>
      <if test="utmSource != null and utmSource != '' ">
          and c.utm_source = #{utmSource}
      </if>
      <if test="utmSources != null and utmSources.size > 0">
          and c.utm_source IN
          <foreach collection="utmSources" item="item"
                   index="index" open="(" close=")" separator=",">
              #{item}
          </foreach>
      </if>
      <if test="cooperationStatus != null and cooperationStatus != '' ">
          and c.cooperation_status = #{cooperationStatus}
      </if>
      <if test="houseStatus != null and houseStatus != '' and houseStatus == '有'.toString()">
          and (c.house_status = '有' or c.house_status = '是')
      </if>
      <if test="houseStatus != null and houseStatus != '' and houseStatus == '无'.toString()">
          and (c.house_status = '无' or c.house_status = '无')
      </if>
      <if test="ownUserName != null and ownUserName != '' ">
          and c.own_user_name = #{ownUserName}
      </if>
      <if test="customerSource != null and customerSource != '' ">
          and c.customer_source = #{customerSource}
      </if>
      <if test="createTimeStart != null and createTimeEnd != null">
          and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
      </if>
      <if test="circle != null  ">
          and c.circle = #{circle,}
      </if>
      <if test="companyId != null ">
          and c.company_id = #{companyId}
      </if>

      <if test="remain != null ">
          and c.remain = #{remain}
      </if>
      <if test="loanAmount != null and loanAmount ==0 ">
          and c.loan_amount = 0
      </if>
      <if test="loanAmount != null and loanAmount ==1 ">
          and c.loan_amount &lt;= 5 and c.loan_amount &gt; 0
      </if>
      <if test="loanAmount != null and loanAmount ==2 ">
          and c.loan_amount &lt;= 10 and c.loan_amount &gt; 5
      </if>
      <if test="loanAmount != null and loanAmount ==3 ">
          and c.loan_amount &lt;= 50 and c.loan_amount &gt; 10
      </if>
      <if test="loanAmount != null and loanAmount ==4 ">
          and c.loan_amount &lt;= 100 and c.loan_amount &gt; 50
      </if>
      <if test="loanAmount != null and loanAmount ==5 ">
          and c.loan_amount &lt;= 500 and c.loan_amount &gt; 100
      </if>
      <if test="loanAmount != null and loanAmount ==6 ">
          and c.loan_amount &gt; 500
      </if>
      <if test="level != null ">
          and c.customer_type = #{level}
      </if>
      <if test="owerId!=null and owerId.size>0">
          AND c.own_user_id in
          <foreach collection="owerId" item="owerId"
                   index="index" open="(" close=")" separator=",">
              ${owerId}
          </foreach>
      </if>
      <if test="cooperation_status!=null and cooperation_status.size>0">
          AND c.cooperation_status in
          <foreach item="item" index="index" collection="cooperation_status" open="("
                   separator="," close=")">
              #{item}
          </foreach>
      </if>
      <if test="communication_order!=null">
          <choose>
              <when test="communication_order == 0">
                 and c.communicate_time is NULL
              </when>
              <when test="communication_order == 1">
                  and c.communicate_time is NOT NULL and c.confirm = 1
              </when>
              <when test="communication_order == 2">
                  and c.communicate_time is NOT NULL and c.confirm = 2
              </when>
          </choose>
      </if>
    <choose>
      <when test="order != null and order !=''">
        order by ${order}
      </when>
      <otherwise>
        order by c.last_update_time desc
      </otherwise>
    </choose>
    limit #{start},#{size}
  </select>
  <insert id="insertCustomer" parameterType="com.fjs.cronus.model.CustomerInfo" useGeneratedKeys="true" keyProperty="id">
    insert into customer_info
      <trim prefix="(" suffix=")" suffixOverrides="," >

          <if test="telephonenumber != null" >
              telephonenumber,
          </if>
          <if test="customerName != null" >
              customer_name,
          </if>
          <if test="customerType != null" >
              customer_type,
          </if>
          <if test="customerLevel != null" >
              customer_level,
          </if>
          <if test="sparePhone != null" >
              spare_phone,
          </if>
          <if test="age != null" >
              age,
          </if>
          <if test="marriage != null" >
              marriage,
          </if>
          <if test="idCard != null" >
              id_card,
          </if>
          <if test="provinceHuji != null" >
              province_huji,
          </if>
          <if test="sex != null" >
              sex,
          </if>
          <if test="customerStreet != null" >
              customer_street,
          </if>
          <if test="customerAddress != null" >
              customer_address,
          </if>
          <if test="houseStatus != null" >
              house_status,
          </if>
          <if test="houseAmount != null" >
              house_amount,
          </if>
          <if test="houseType != null" >
              house_type,
          </if>
          <if test="houseValue != null" >
              house_value,
          </if>
          <if test="houseArea != null" >
              house_area,
          </if>
          <if test="houseAge != null" >
              house_age,
          </if>
          <if test="houseLoan != null" >
              house_loan,
          </if>
          <if test="houseAlone != null" >
              house_alone,
          </if>
          <if test="houseLocation != null" >
              house_location,
          </if>
          <if test="city != null" >
              city,
          </if>
          <if test="customerClassify != null" >
              customer_classify,
          </if>
          <if test="callbackStatus != null" >
              callback_status,
          </if>
          <if test="callbackTime != null" >
              callback_time,
          </if>
          <if test="subCompanyId != null" >
              sub_company_id,
          </if>
          <if test="houseLoanValue != null" >
              house_loan_value,
          </if>
          <if test="createTime != null" >
              create_time,
          </if>
          <if test="lastUpdateTime != null" >
              last_update_time,
          </if>
          <if test="createUser != null" >
              create_user,
          </if>
          <if test="lastUpdateUser != null" >
              last_update_user,
          </if>
          <if test="isDeleted != null" >
              is_deleted,
          </if>
      <if test="expectMoneyTime != null" >
          expect_money_time,
      </if>
      <if test="expectLoanTime != null" >
          expect_loan_time,
      </if>
      <if test="expectRepaymentWay != null" >
          expect_repayment_way,
      </if>
      <if test="houseClear != null" >
          house_clear,
      </if>
      <if test="houseOwner != null" >
          house_owner,
      </if>
      <if test="mortgageAmount != null" >
          mortgage_amount,
      </if>
      <if test="mortgaeMonth != null" >
          mortgae_month,
      </if>
      <if test="isHavaCar != null" >
          is_hava_car,
      </if>
      <if test="carWorth != null" >
          car_worth,
      </if>
      <if test="carAge != null" >
          car_age,
      </if>
      <if test="isHavaInsurance != null" >
          is_hava_insurance,
      </if>
      <if test="yearPayAmount != null" >
          year_pay_amount,
      </if>
      <if test="insuranceTime != null" >
          insurance_time,
      </if>
      <if test="isHavaDebt != null" >
          is_hava_debt,
      </if>
      <if test="debtMoney != null" >
          debt_money,
      </if>
      <if test="debtMonth != null" >
          debt_month,
      </if>
      <if test="debtOverdue != null" >
          debt_overdue,
      </if>
      <if test="debtOverdueMoney != null" >
          debt_overdue_money,
      </if>
      <if test="debtTime != null" >
          debt_time,
      </if>
      <if test="workStatus != null" >
          work_status,
      </if>
      <if test="wagerCard != null" >
          wager_card,
      </if>
      <if test="entryTime != null" >
          entry_time,
      </if>
      <if test="companyType != null" >
          company_type,
      </if>
      <if test="socialSecurity != null" >
          social_security,
      </if>
      <if test="socialMoney != null" >
          social_money,
      </if>
      <if test="socialTime != null" >
          social_time,
      </if>
      <if test="providentFund != null" >
          provident_fund,
      </if>
      <if test="providentMoney != null" >
          provident_money,
      </if>
      <if test="providentTime != null" >
          provident_time,
      </if>
      <if test="compnyName != null" >
          compny_name,
      </if>
      <if test="fixedPhone != null" >
          fixed_phone,
      </if>
          <if test="perDescription != null" >
              per_description,
          </if>
          <if test="loanAmount != null" >
              loan_amount,
          </if>
          <if test="customerSource != null" >
              customer_source,
          </if>
          <if test="utmSource != null" >
              utm_source,
          </if>
          <if test="ownUserId != null" >
              own_user_id,
          </if>
          <if test="ownUserName != null" >
              own_user_name,
          </if>
          <if test="receiveTime != null" >
              receive_time,
          </if>
          <if test="circle != null" >
              circle,
          </if>
          <if test="companyId != null" >
              company_id,
          </if>
          <if test="employedInfo != null" >
              employed_info,
          </if>
          <if test="retirementWages != null" >
              retirement_wages,
          </if>
          <if test="ext != null" >
              ext,
          </if>
          <if test="level != null">
              level,
          </if>
          <if test="remain != null">
              remain,
          </if>
          <if test="viewTime != null">
              view_time,
          </if>
          <if test="viewUid != null">
              view_uid,
          </if>
          <if test="viewCount != null">
              view_count,
          </if>
          <if test="autostatus != null">
              autostatus,
          </if>
          <if test="firstCommunicateTime != null">
              first_communicate_time,
          </if>
          <if test="firstAllocateTime != null">
              first_allocate_time,
          </if>
          <if test="cooperationStatus != null">
              cooperation_status,
          </if>
          <if test="confirm != null">
              confirm,
          </if>
          <if test="clickCommunicateButton != null">
              click_communicate_button,
          </if>
          <if test="communicateTime != null">
              communicate_time,
          </if>
          <if test="communicateId != null">
              communicate_id,
          </if>
          <if test="receiveId != null">
              receive_id,
          </if>
          <if test="mediaCustomerCountId != null">
              media_customer_count_id,
          </if>
          <if test="ocdcId != null">
              `ocdc_id`,
          </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="telephonenumber != null" >
              #{telephonenumber,jdbcType=VARCHAR},
          </if>
          <if test="customerName != null" >
              #{customerName,jdbcType=VARCHAR},
          </if>
          <if test="customerType != null" >
              #{customerType,jdbcType=VARCHAR},
          </if>
          <if test="customerLevel != null" >
              #{customerLevel,jdbcType=VARCHAR},
          </if>
          <if test="sparePhone != null" >
              #{sparePhone,jdbcType=VARCHAR},
          </if>
          <if test="age != null" >
              #{age,jdbcType=VARCHAR},
          </if>
          <if test="marriage != null" >
              #{marriage,jdbcType=VARCHAR},
          </if>
          <if test="idCard != null" >
              #{idCard,jdbcType=VARCHAR},
          </if>
          <if test="provinceHuji != null" >
              #{provinceHuji,jdbcType=VARCHAR},
          </if>
          <if test="sex != null" >
              #{sex,jdbcType=VARCHAR},
          </if>
          <if test="customerStreet != null" >
              #{customerStreet,jdbcType=VARCHAR},
          </if>
          <if test="customerAddress != null" >
              #{customerAddress,jdbcType=VARCHAR},
          </if>
          <if test="houseStatus != null" >
              #{houseStatus,jdbcType=VARCHAR},
          </if>
          <if test="houseAmount != null" >
              #{houseAmount,jdbcType=VARCHAR},
          </if>
          <if test="houseType != null" >
              #{houseType,jdbcType=VARCHAR},
          </if>
          <if test="houseValue != null" >
              #{houseValue,jdbcType=VARCHAR},
          </if>
          <if test="houseArea != null" >
              #{houseArea,jdbcType=VARCHAR},
          </if>
          <if test="houseAge != null" >
              #{houseAge,jdbcType=VARCHAR},
          </if>
          <if test="houseLoan != null" >
              #{houseLoan,jdbcType=VARCHAR},
          </if>
          <if test="houseAlone != null" >
              #{houseAlone,jdbcType=VARCHAR},
          </if>
          <if test="houseLocation != null" >
              #{houseLocation,jdbcType=VARCHAR},
          </if>
          <if test="city != null" >
              #{city,jdbcType=VARCHAR},
          </if>
          <if test="customerClassify != null" >
              #{customerClassify,jdbcType=VARCHAR},
          </if>
          <if test="callbackStatus != null" >
              #{callbackStatus,jdbcType=VARCHAR},
          </if>
          <if test="callbackTime != null" >
              #{callbackTime,jdbcType=TIMESTAMP},
          </if>
          <if test="subCompanyId != null" >
              #{subCompanyId,jdbcType=INTEGER},
          </if>
          <if test="houseLoanValue != null" >
              #{houseLoanValue,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null" >
              #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="lastUpdateTime != null" >
              #{lastUpdateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="createUser != null" >
              #{createUser,jdbcType=INTEGER},
          </if>
          <if test="lastUpdateUser != null" >
              #{lastUpdateUser,jdbcType=INTEGER},
          </if>
          <if test="isDeleted != null" >
              #{isDeleted,jdbcType=INTEGER},
          </if>
          <if test="expectMoneyTime != null" >
              #{expectMoneyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="expectLoanTime != null" >
              #{expectLoanTime,jdbcType=VARCHAR},
          </if>
          <if test="expectRepaymentWay != null" >
              #{expectRepaymentWay,jdbcType=INTEGER},
          </if>
          <if test="houseClear != null" >
              #{houseClear,jdbcType=INTEGER},
          </if>
          <if test="houseOwner != null" >
              #{houseOwner,jdbcType=VARCHAR},
          </if>
          <if test="mortgageAmount != null" >
              #{mortgageAmount,jdbcType=VARCHAR},
          </if>
          <if test="mortgaeMonth != null" >
              #{mortgaeMonth,jdbcType=VARCHAR},
          </if>
          <if test="isHavaCar != null" >
              #{isHavaCar,jdbcType=INTEGER},
          </if>
          <if test="carWorth != null" >
              #{carWorth,jdbcType=VARCHAR},
          </if>
          <if test="carAge != null" >
              #{carAge,jdbcType=INTEGER},
          </if>
          <if test="isHavaInsurance != null" >
              #{isHavaInsurance,jdbcType=INTEGER},
          </if>
          <if test="yearPayAmount != null" >
              #{yearPayAmount,jdbcType=VARCHAR},
          </if>
          <if test="insuranceTime != null" >
              #{insuranceTime,jdbcType=INTEGER},
          </if>
          <if test="isHavaDebt != null" >
              #{isHavaDebt,jdbcType=INTEGER},
          </if>
          <if test="debtMoney != null" >
              #{debtMoney,jdbcType=VARCHAR},
          </if>
          <if test="debtMonth != null" >
              #{debtMonth,jdbcType=INTEGER},
          </if>
          <if test="debtOverdue != null" >
              #{debtOverdue,jdbcType=INTEGER},
          </if>
          <if test="debtOverdueMoney != null" >
              #{debtOverdueMoney,jdbcType=VARCHAR},
          </if>
          <if test="debtTime != null" >
              #{debtTime,jdbcType=INTEGER},
          </if>
          <if test="workStatus != null" >
              #{workStatus,jdbcType=INTEGER},
          </if>
          <if test="wagerCard != null" >
              #{wagerCard,jdbcType=VARCHAR},
          </if>
          <if test="entryTime != null" >
              #{entryTime,jdbcType=INTEGER},
          </if>
          <if test="companyType != null" >
              #{companyType,jdbcType=INTEGER},
          </if>
          <if test="socialSecurity != null" >
              #{socialSecurity,jdbcType=INTEGER},
          </if>
          <if test="socialMoney != null" >
              #{socialMoney,jdbcType=VARCHAR},
          </if>
          <if test="socialTime != null" >
              #{socialTime,jdbcType=INTEGER},
          </if>
          <if test="providentFund != null" >
              #{providentFund,jdbcType=INTEGER},
          </if>
          <if test="providentMoney != null" >
              #{providentMoney,jdbcType=VARCHAR},
          </if>
          <if test="providentTime != null" >
              #{providentTime,jdbcType=INTEGER},
          </if>
          <if test="compnyName != null" >
              #{compnyName,jdbcType=VARCHAR},
          </if>
          <if test="fixedPhone != null" >
              #{fixedPhone,jdbcType=INTEGER},
          </if>
          <if test="perDescription != null" >
              #{perDescription,jdbcType=LONGVARCHAR},
          </if>
          <if test="loanAmount != null" >
              #{loanAmount,jdbcType=DECIMAL},
          </if>
          <if test="customerSource != null" >
              #{customerSource,jdbcType=VARCHAR},
          </if>
          <if test="utmSource != null" >
              #{utmSource,jdbcType=VARCHAR},
          </if>
          <if test="ownUserId != null" >
              #{ownUserId,jdbcType=VARCHAR},
          </if>
          <if test="ownUserName != null" >
              #{ownUserName,jdbcType=DECIMAL},
          </if>
          <if test="receiveTime != null" >
              #{receiveTime,jdbcType=VARCHAR},
          </if>
          <if test="circle != null" >
              #{circle,jdbcType=VARCHAR},
          </if>
          <if test="companyId != null" >
              #{companyId,jdbcType=VARCHAR},
          </if>
          <if test="employedInfo != null" >
              #{employedInfo,jdbcType=LONGVARCHAR},
          </if>
          <if test="retirementWages != null" >
              #{retirementWages,jdbcType=VARCHAR},
          </if>
          <if test="ext != null" >
              #{ext,jdbcType=LONGVARCHAR},
          </if>
          <if test="level != null">
              #{level,jdbcType=VARCHAR},
          </if>
          <if test="remain != null">
              #{remain,jdbcType=INTEGER},
          </if>
          <if test="viewTime != null">
              #{viewTime,jdbcType=TIMESTAMP},
          </if>
          <if test="viewUid != null">
              #{viewUid,jdbcType=INTEGER},
          </if>
          <if test="viewCount != null">
              #{viewCount,jdbcType=INTEGER},
          </if>
          <if test="autostatus != null">
              #{autostatus,jdbcType=INTEGER},
          </if>
          <if test="firstCommunicateTime != null">
              #{firstCommunicateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="firstAllocateTime != null">
              #{firstAllocateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="cooperationStatus != null">
              #{cooperationStatus,jdbcType=VARCHAR},
          </if>
          <if test="confirm != null">
              #{confirm,jdbcType=INTEGER},
          </if>
          <if test="clickCommunicateButton != null">
              #{clickCommunicateButton,jdbcType=INTEGER},
          </if>
          <if test="communicateTime != null">
              #{communicateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="communicateId != null">
              #{communicateId,jdbcType=INTEGER},
          </if>
          <if test="receiveId != null">
              #{receiveId,jdbcType=INTEGER},
          </if>
          <if test="mediaCustomerCountId != null">
              #{mediaCustomerCountId,jdbcType=INTEGER}
          </if>
          <if test="ocdcId != null">
              #{ocdcId,jdbcType=INTEGER},
          </if>
      </trim>
  </insert>
 <select id="findByFeild" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
  select
  <include refid="Base_Column_List" />
  ,
  <include refid="Blob_Column_List" />
  from customer_info  c
  WHERE  c.is_deleted = 0
     <if test="telephonenumber != null and telephonenumber!=''">
         AND c.telephonenumber = #{telephonenumber}
     </if>
     <if test="id != null and id !=''">
         and c.id = #{id}
     </if>
     <if test="customerType != null and customerType !=''">
         and c.customer_type = #{customerType}
     </if>
</select>
  <select id="findCustomerListByFeild" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from customer_info  c
    WHERE  c.is_deleted = 0
    <if test="paramsList!=null and paramsList.size>0">
      AND c.id in
      <foreach collection="paramsList" item="paramsList"
               index="index" open="(" close=")" separator=",">
        ${paramsList}
      </foreach>
    </if>
      <if test="id != null and id !=''">
          and c.id = #{id}
      </if>
      <if test="customerName != null and customerName !=''">
          and c.customer_name = #{customerName}
      </if>
      <if test="customerType != null" >
          and c.customer_type = #{customerType,jdbcType=VARCHAR}
      </if>
      <if test="city != null and city !=''">
          and c.city = #{city}
      </if>
      <if test="companyId != null ">
          and c.company_id = #{companyId}
      </if>
      <if test="remain != null ">
          and c.remain = #{remain}
      </if>
      <if test="owerId!=null and owerId.size>0">
          AND c.own_user_id in
          <foreach collection="owerId" item="owerId"
                   index="index" open="(" close=")" separator=",">
              ${owerId}
          </foreach>
      </if>
      <if test="telephoneList!=null and telephoneList.size>0">
          AND  c.telephonenumber IN
      <foreach item="item" index="index" collection="telephoneList" open="("
               separator="," close=")">
          #{item}
      </foreach>
      </if>
  </select>
    <select id="findCustomerByOtherCity" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
            AND c.city in
            <foreach collection="cityList" item="cityList"
                     index="index" open="(" close=")" separator=",">
                ${cityList}
            </foreach>
    </select>
    <update id="updateCustomer" parameterType="com.fjs.cronus.model.CustomerInfo" >
        update customer_info
        <set >
            <if test="telephonenumber != null" >
                telephonenumber = #{telephonenumber,jdbcType=VARCHAR},
            </if>
            <if test="customerName != null" >
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="customerType != null" >
                customer_type = #{customerType,jdbcType=VARCHAR},
            </if>
            <if test="customerLevel != null" >
                customer_level = #{customerLevel,jdbcType=VARCHAR},
            </if>
            <if test="sparePhone != null" >
                spare_phone = #{sparePhone,jdbcType=VARCHAR},
            </if>
            <if test="age != null" >
                age = #{age,jdbcType=VARCHAR},
            </if>
            <if test="marriage != null" >
                marriage = #{marriage,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null" >
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="provinceHuji != null" >
                province_huji = #{provinceHuji,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="customerStreet != null" >
                customers_street = #{customerStreet,jdbcType=VARCHAR},
            </if>
            <if test="customerAddress != null" >
                customer_address = #{customerAddress,jdbcType=VARCHAR},
            </if>
            <if test="houseStatus != null" >
                house_status = #{houseStatus,jdbcType=VARCHAR},
            </if>
            <if test="houseAmount != null" >
                house_amount = #{houseAmount,jdbcType=VARCHAR},
            </if>
            <if test="houseType != null" >
                house_type = #{houseType,jdbcType=VARCHAR},
            </if>
            <if test="houseValue != null" >
                house_value = #{houseValue,jdbcType=VARCHAR},
            </if>
            <if test="houseArea != null" >
                house_area = #{houseArea,jdbcType=VARCHAR},
            </if>
            <if test="houseAge != null" >
                house_age = #{houseAge,jdbcType=VARCHAR},
            </if>
            <if test="houseLoan != null" >
                house_loan = #{houseLoan,jdbcType=VARCHAR},
            </if>
            <if test="houseAlone != null" >
                house_alone = #{houseAlone,jdbcType=VARCHAR},
            </if>
            <if test="houseLocation != null" >
                house_location = #{houseLocation,jdbcType=VARCHAR},
            </if>
            <if test="city != null" >
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="customerClassify != null" >
                customer_classify = #{customerClassify,jdbcType=VARCHAR},
            </if>
            <if test="callbackStatus != null" >
                callback_status = #{callbackStatus,jdbcType=VARCHAR},
            </if>
            <if test="callbackTime != null" >
                callback_time = #{callbackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="subCompanyId != null" >
                sub_company_id = #{subCompanyId,jdbcType=INTEGER},
            </if>
            <if test="houseLoanValue != null" >
                house_loan_value = #{houseLoanValue,jdbcType=VARCHAR},
            </if>

            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateTime != null" >
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateUser != null" >
                last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="expectMoneyTime != null" >
                expect_money_time = #{expectMoneyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expectLoanTime != null" >
                expect_loan_time = #{expectLoanTime,jdbcType=VARCHAR},
            </if>
            <if test="expectRepaymentWay != null" >
                expect_repayment_way = #{expectRepaymentWay,jdbcType=INTEGER},
            </if>
            <if test="houseClear != null" >
                house_clear = #{houseClear,jdbcType=INTEGER},
            </if>
            <if test="houseOwner != null" >
                house_owner = #{houseOwner,jdbcType=VARCHAR},
            </if>
            <if test="mortgageAmount != null" >
                mortgage_amount = #{mortgageAmount,jdbcType=VARCHAR},
            </if>
            <if test="mortgaeMonth != null" >
                mortgae_month = #{mortgaeMonth,jdbcType=VARCHAR},
            </if>
            <if test="isHavaCar != null" >
                is_hava_car = #{isHavaCar,jdbcType=INTEGER},
            </if>
            <if test="carWorth != null" >
                car_worth = #{carWorth,jdbcType=VARCHAR},
            </if>
            <if test="carAge != null" >
                car_age = #{carAge,jdbcType=INTEGER},
            </if>
            <if test="isHavaInsurance != null" >
                is_hava_insurance = #{isHavaInsurance,jdbcType=INTEGER},
            </if>
            <if test="yearPayAmount != null" >
                year_pay_amount = #{yearPayAmount,jdbcType=VARCHAR},
            </if>
            <if test="insuranceTime != null" >
                insurance_time = #{insuranceTime,jdbcType=INTEGER},
            </if>
            <if test="isHavaDebt != null" >
                is_hava_debt = #{isHavaDebt,jdbcType=INTEGER},
            </if>
            <if test="debtMoney != null" >
                debt_money = #{debtMoney,jdbcType=VARCHAR},
            </if>
            <if test="debtMonth != null" >
                debt_month = #{debtMonth,jdbcType=INTEGER},
            </if>
            <if test="debtOverdue != null" >
                debt_overdue = #{debtOverdue,jdbcType=INTEGER},
            </if>
            <if test="debtOverdueMoney != null" >
                debt_overdue_money = #{debtOverdueMoney,jdbcType=VARCHAR},
            </if>
            <if test="debtTime != null" >
                debt_time = #{debtTime,jdbcType=INTEGER},
            </if>
            <if test="workStatus != null" >
                work_status = #{workStatus,jdbcType=INTEGER},
            </if>
            <if test="wagerCard != null" >
                wager_card = #{wagerCard,jdbcType=VARCHAR},
            </if>
            <if test="entryTime != null" >
                entry_time = #{entryTime,jdbcType=INTEGER},
            </if>
            <if test="companyType != null" >
                company_type = #{companyType,jdbcType=INTEGER},
            </if>
            <if test="socialSecurity != null" >
                social_security = #{socialSecurity,jdbcType=INTEGER},
            </if>
            <if test="socialMoney != null" >
                social_money = #{socialMoney,jdbcType=VARCHAR},
            </if>
            <if test="socialTime != null" >
                social_time = #{socialTime,jdbcType=INTEGER},
            </if>
            <if test="providentFund != null" >
                provident_fund = #{providentFund,jdbcType=INTEGER},
            </if>
            <if test="providentMoney != null" >
                provident_money = #{providentMoney,jdbcType=VARCHAR},
            </if>
            <if test="providentTime != null" >
                provident_time = #{providentTime,jdbcType=INTEGER},
            </if>
            <if test="compnyName != null" >
                compny_name = #{compnyName,jdbcType=VARCHAR},
            </if>
            <if test="fixedPhone != null" >
                fixed_phone = #{fixedPhone,jdbcType=INTEGER},
            </if>
            <if test="perDescription != null" >
                per_description = #{perDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="loanAmount != null" >
                loan_amount = #{loanAmount,jdbcType=DECIMAL},
            </if>
            <if test="customerSource != null" >
                customer_source = #{customerSource,jdbcType=VARCHAR},
            </if>
            <if test="utmSource != null" >
                utm_source = #{utmSource,jdbcType=VARCHAR},
            </if>
            <if test="ownUserId != null" >
                own_user_id = #{ownUserId,jdbcType=INTEGER},
            </if>
            <if test="ownUserName != null" >
                own_user_name = #{ownUserName,jdbcType=VARCHAR},
            </if>
            <if test="receiveTime != null" >
                receive_time = #{receiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="circle != null" >
                circle = #{circle,jdbcType=INTEGER},
            </if>
            <if test="companyId != null" >
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="employedInfo != null" >
                employed_info = #{employedInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="retirementWages != null" >
                retirement_wages = #{retirementWages,jdbcType=VARCHAR},
            </if>
            <if test="ext != null" >
                ext = #{ext,jdbcType=LONGVARCHAR},
            </if>

            <if test="level != null">
                level = #{level,jdbcType=VARCHAR},
            </if>
            <if test="remain != null">
                remain = #{remain,jdbcType=INTEGER},
            </if>
            <if test="viewTime != null">
                view_time = #{viewTime,jdbcType=TIMESTAMP},
            </if>
            <if test="viewUid != null">
                view_uid = #{viewUid,jdbcType=INTEGER},
            </if>
            <if test="viewCount != null">
                view_count = #{viewCount,jdbcType=INTEGER},
            </if>
            <if test="autostatus != null">
                autostatus = #{autostatus,jdbcType=INTEGER},
            </if>
            <if test="firstCommunicateTime != null">
                first_communicate_time = #{firstCommunicateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="firstAllocateTime != null">
                first_allocate_time = #{firstAllocateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cooperationStatus != null">
                cooperation_status = #{cooperationStatus,jdbcType=VARCHAR},
            </if>
            <if test="confirm != null">
                confirm = #{confirm,jdbcType=INTEGER},
            </if>
            <if test="clickCommunicateButton != null">
                click_communicate_button = #{clickCommunicateButton,jdbcType=INTEGER},
            </if>
            <if test="communicateTime != null">
                communicate_time = #{communicateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="communicateId != null">
                communicate_id = #{communicateId,jdbcType=INTEGER},
            </if>
            <if test="receiveId != null">
                receive_id = #{receiveId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateCustomerSys" parameterType="com.fjs.cronus.model.CustomerInfo" >
        update customer_info
        <set >
            <if test="city != null" >
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="subCompanyId != null" >
                sub_company_id = #{subCompanyId,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null" >
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateUser != null" >
                last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
            </if>
            <if test="utmSource != null" >
                utm_source = #{utmSource,jdbcType=VARCHAR},
            </if>
            <if test="ownUserId != null" >
                own_user_id = #{ownUserId,jdbcType=INTEGER},
            </if>
            <if test="ownUserName != null" >
                own_user_name = #{ownUserName,jdbcType=VARCHAR},
            </if>
            <if test="receiveTime != null" >
                receive_time = #{receiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="firstCommunicateTime != null">
                first_communicate_time = #{firstCommunicateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="clickCommunicateButton != null">
                click_communicate_button = #{clickCommunicateButton,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateCustomerNonCommunicate" parameterType="com.fjs.cronus.model.CustomerInfo" >
        update customer_info
        <set >
            <if test="subCompanyId != null" >
                sub_company_id = #{subCompanyId,jdbcType=INTEGER},
            </if>
            <if test="remain != null">
                remain = #{remain,jdbcType=INTEGER},
            </if>
            <if test="ownUserId != null" >
                own_user_id = #{ownUserId,jdbcType=INTEGER},
            </if>
            <if test="ownUserName != null" >
                own_user_name = #{ownUserName,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null" >
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateUser != null" >
                last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
            </if>
            <if test="confirm != null">
                confirm = #{confirm,jdbcType=INTEGER},
            </if>
            <if test="utmSource != null" >
                utm_source = #{utmSource,jdbcType=VARCHAR},
            </if>
            <if test="receiveTime != null" >
                receive_time = #{receiveTime,jdbcType=TIMESTAMP},
            </if>
            communicate_time = #{communicateTime,jdbcType=TIMESTAMP},
            <if test="clickCommunicateButton != null">
                click_communicate_button = #{clickCommunicateButton,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getListByWhere" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
       <!-- <if test="customerIdList!=null and customerIdList.size>0">
            AND c.id in
            <foreach collection="customerIdList" item="customerIdList"
                     index="index" open="(" close=")" separator=",">
                ${customerIdList}
            </foreach>
        </if>-->
        <if test="customer_type!=null and customer_type!=''">
            and c.customer_type = #{customer_type}
        </if>
        <if test="city!=null">
            AND c.city = #{city}
        </if>
        <if test="search_name !=null and search_name !=''">
            and c.customer_name = #{search_name}
        </if>
        <if test="telephonenumber != null and telephonenumber != ''">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="search_callback_status != null and search_callback_status != ''">
            and c.callback_status = #{search_callback_status}
        </if>
        <if test="ownUserId != null and ownUserId != ''">
            and c.own_user_id = #{ownUserId}
        </if>
        <if test="createTimeStart != null and createTimeEnd != null">
            and create_time  &gt;= #{createTimeStart} and  create_time &lt;= #{createTimeEnd}
        </if>
        <if test="isHaveOwn != null and isHaveOwn != ''">
            <choose>
                <when test="isHaveOwn == 0">
                    and c.own_user_id ==0
                </when>
                <when test="isHaveOwn == 1">
                    and c.own_user_id != 0
                </when>
            </choose>
        </if>
        <if test="subCompanyId != null and subCompanyId != ''">
            and c.sub_company_id = #{subCompanyId}
        </if>
        <choose>
            <when test="communication_order != null and order == 1">
              and c.callback_time is NULL
            </when>
            <when test="communication_order != null and order == 2">
                and c.callback_time is NOT NULL and  c.callback_time &lt;= #{searchTime}
            </when>

            <when test="communication_order != null and order == 3">
                and c.callback_time is NOT NULL and  c.callback_time &gt;= #{searchTime} AND c.callback_status=#{callback_status}
            </when>
            <otherwise>
                and (c.callback_time is  NULL or c.callback_time &lt;= #{searchTime})
            </otherwise>
        </choose>
        ORDER BY  c.last_update_time DESC
        limit #{start},#{size}
    </select>
    <select id="findCustomerByType" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        c.id
        from customer_info  c
        WHERE  c.is_deleted = 0
        <if test="customerType != null and customerType !=''">
            and c.customer_type = #{customerType}
        </if>
        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="city != null and city !=''">
            and c.city  like CONCAT(#{city},'%' )
        </if>
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>
    </select>
    <select id="getListByWhereCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        COUNT(*)
        from customer_info  c
        WHERE  c.is_deleted = 0
        <!-- <if test="customerIdList!=null and customerIdList.size>0">
             AND c.id in
             <foreach collection="customerIdList" item="customerIdList"
                      index="index" open="(" close=")" separator=",">
                 ${customerIdList}
             </foreach>
         </if>-->
        <if test="customer_type!=null and customer_type!=''">
            and c.customer_type = #{customer_type}
        </if>
        <if test="city!=null">
            AND c.city = #{city}
        </if>
        <if test="search_name !=null and search_name !=''">
            and c.customer_name = #{search_name}
        </if>
        <if test="telephonenumber != null and telephonenumber != ''">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="search_callback_status != null and search_callback_status != ''">
            and c.callback_status = #{search_callback_status}
        </if>
        <if test="ownUserId != null and ownUserId != ''">
            and c.own_user_id = #{ownUserId}
        </if>
        <if test="createTimeStart != null and createTimeEnd != null">
            and create_time  &gt;= #{createTimeStart} and  create_time &lt;= #{createTimeEnd}
        </if>
        <if test="isHaveOwn != null and isHaveOwn != ''">
            <choose>
                <when test="isHaveOwn == 0">
                    and c.own_user_id ==0
                </when>
                <when test="isHaveOwn == 1">
                    and c.own_user_id != 0
                </when>
            </choose>
        </if>
        <if test="subCompanyId != null and subCompanyId != ''">
            and c.sub_company_id = #{subCompanyId}
        </if>
        <choose>
            <when test="communication_order != null and order == 1">
                and c.callback_time is NULL
            </when>
            <when test="communication_order != null and order == 2">
                and c.callback_time is NOT NULL and  c.callback_time &lt;= #{searchTime}
            </when>

            <when test="communication_order != null and order == 3">
                and c.callback_time is NOT NULL and  c.callback_time &gt;= #{searchTime} AND c.callback_status=#{callback_status}
            </when>
            <otherwise>
                and (c.callback_time is  NULL or c.callback_time &lt;= #{searchTime})
            </otherwise>
        </choose>
    </select>

    <select id="selectByPhone" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
        <if test="telephonenumber != null and telephonenumber != ''">
            and c.telephonenumber like CONCAT(${telephonenumber},'%' )
        </if>
    </select>

    <select id="selectByOCDCPhone" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
        <if test="telephonenumber != null and telephonenumber!=''">
            AND c.telephonenumber = #{telephonenumber}
        </if>
    </select>
    <select id="allocationCustomerList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="cronus_column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
        AND  c.communicate_time IS NULL
        and  c.remain = 0
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>

        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="utmSources != null and utmSources.size > 0 ">
            and c.utm_source IN
            <foreach  collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="customerSource != null and utmSource != '' ">
            and c.customer_source = #{customerSource}
        </if>
        <if test="autostatus != null and autostatus != '' ">
            and c.autostatus = #{autostatus}
        </if>
        <if test="level != null and level != '' ">
            and c.customer_type = #{level}
        </if>
        <if test="telephonenumber != null and telephonenumber != '' ">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="ownerIds!=null and ownerIds.size>0">
            AND c.own_user_id in
            <foreach collection="ownerIds" item="ownerIds"
                     index="index" open="(" close=")" separator=",">
                ${ownerIds}
            </foreach>
        </if>
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by c.create_time DESC
            </otherwise>
        </choose>
        limit #{start},#{size}
    </select>
    <select id="allocationCustomerListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
       COUNT(*)
        from customer_info  c
        WHERE  c.is_deleted = 0
        AND  c.communicate_time IS NULL
        and  c.remain = 0
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>

        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="utmSources != null and utmSources.size > 0 ">
            and c.utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="autostatus != null and autostatus != '' ">
            and c.autostatus = #{autostatus}
        </if>
        <if test="customerSource != null and utmSource != '' ">
            and c.customer_source = #{customerSource}
        </if>
        <if test="level != null and level != '' ">
            and c.customer_type = #{level}
        </if>
        <if test="telephonenumber != null and telephonenumber != '' ">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="ownerIds!=null and ownerIds.size>0">
            AND c.own_user_id in
            <foreach collection="ownerIds" item="ownerIds"
                     index="index" open="(" close=")" separator=",">
                ${ownerIds}
            </foreach>
        </if>
    </select>


    <select id="communicatedList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="cronus_column_List" />

        from customer_info  c
        WHERE  c.is_deleted = 0
         AND  c.communicate_time IS NOT NULL
        and  c.remain = 0
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>

        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="utmSources != null and utmSources.size > 0 ">
            and c.utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="autostatus != null and autostatus != '' ">
            and c.autostatus = #{autostatus}
        </if>
        <if test="telephonenumber != null and telephonenumber != '' ">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="level != null and level != '' ">
            and c.customer_type = #{level}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="ownerIds!=null and ownerIds.size>0">
            AND c.own_user_id in
            <foreach collection="ownerIds" item="ownerIds"
                     index="index" open="(" close=")" separator=",">
                ${ownerIds}
            </foreach>
        </if>
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by c.create_time DESC
            </otherwise>
        </choose>
        limit #{start},#{size}
    </select>
    <select id="communicatedListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        COUNT(*)
        from customer_info  c
        WHERE  c.is_deleted = 0
        AND  c.communicate_time IS NOT NULL
        and  c.remain = 0
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>

        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="utmSources != null and utmSources.size > 0 ">
            and c.utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="autostatus != null and autostatus != '' ">
            and c.autostatus = #{autostatus}
        </if>
        <if test="level != null and level != '' ">
            and c.customer_type = #{level}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="telephonenumber != null and telephonenumber != '' ">
            and c.telephonenumber = #{telephonenumber}
        </if>
        <if test="ownerIds!=null and ownerIds.size>0">
            AND c.own_user_id in
            <foreach collection="ownerIds" item="ownerIds"
                     index="index" open="(" close=")" separator=",">
                ${ownerIds}
            </foreach>
        </if>
    </select>


    <select id="publicOfferList" resultMap="BaseResultMap" parameterType="Map">
        select
        <include refid="cronus_column_List" />
        from customer_info
        where own_user_id =0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="city != null and '' != city">
            and city = #{city,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            and customer_name = #{customerName,jdbcType=VARCHAR}
        </if>
        <if test="customerSource != null and '' != customerSource">
            and customer_source = #{customerSource,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="utmSources != null and utmSources.size > 0">
            and utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="houseStatus != null and '' != houseStatus">
            and house_status = #{houseStatus,jdbcType=VARCHAR}
        </if>
        <if test="cooperation_status != null and '' != cooperation_status">
            and cooperation_status = #{cooperation_status,jdbcType=VARCHAR}
        </if>
        <if test="companyId != null and '' != companyId">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeBegin != null and createTimeEnd !=null ">
            and date(create_time) between #{createTimeBegin} and #{createTimeEnd}
        </if>
        <if test="lastUpdateTime != null and '' != lastUpdateTime">
            and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createUser != null and '' != createUser">
            and create_user = #{createUser,jdbcType=INTEGER}
        </if>
        <if test="lastUpdateUser != null and '' != lastUpdateUser">
            and last_update_user = #{lastUpdateUser,jdbcType=INTEGER}
        </if>
        <if test="mountLevle != null">
            <choose>
                <when test="mountLevle == 1">
                    and (loan_amount  &gt; 0 and  loan_amount &lt;= 20)
                </when>
                <when test="mountLevle == 2">
                    and (loan_amount  &gt; 20 and  loan_amount &lt;= 50)
                </when>

                <when test="mountLevle == 3">
                    and (loan_amount  &gt; 50 and  loan_amount &lt;= 100)
                </when>
                <when test="mountLevle == 4">
                    and (loan_amount  &gt; 100 and  loan_amount &lt;= 500)
                </when>
                <when test="mountLevle == 5">
                    and (loan_amount  &gt; 500 )
                </when>
            </choose>
        </if>
        <choose>
            <when test="mainCitys.size() > 0 and subCompanyIds.size() == 0">
                and city in
                <foreach item="item" index="index" collection="mainCitys" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test="mainCitys.size() == 0 and subCompanyIds.size() > 0">
                and sub_company_id in
                <foreach item="item" index="index" collection="subCompanyIds" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test="mainCitys.size() > 0 and subCompanyIds.size() > 0">
                and(city in
                <foreach item="item" index="index" collection="mainCitys" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                OR
                sub_company_id in
                <foreach item="item" index="index" collection="subCompanyIds" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                )
            </when>
            <when test="mainCitys.size() == 0 and subCompanyIds.size() == 0">
                and city  is NULL
                and
                sub_company_id IS  NULL
            </when>
        </choose>
        <if test="utmList != null and utmList.size() > 0">
            and utm_source not IN
            <foreach item="item" index="index" collection="utmList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="paramsList!=null and paramsList.size>0">
            AND (cooperation_status IS NULL OR cooperation_status NOT in
            <foreach item="item" index="index" collection="paramsList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        and is_deleted=0
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by last_update_time desc
            </otherwise>
        </choose>
        limit ${start},${size}
    </select>

    <select id="publicOfferCount" resultType="Integer" parameterType="Map">
        select
        COUNT(*)
        from customer_info
        where own_user_id =0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="city != null and '' != city">
            and city = #{city,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            and customer_name = #{customerName,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="customerSource != null and '' != customerSource">
            and customer_source = #{customerSource,jdbcType=VARCHAR}
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="utmSources != null and utmSources.size > 0 ">
            and utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="houseStatus != null and '' != houseStatus">
            and house_status = #{houseStatus,jdbcType=VARCHAR}
        </if>
        <if test="customerClassify != null and '' != customerClassify">
            and customer_classify = #{customerClassify,jdbcType=VARCHAR}
        </if>
        <if test="companyId != null and '' != companyId">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeBegin != null and createTimeEnd !=null ">
            and date(create_time) between #{createTimeBegin} and #{createTimeEnd}
        </if>
        <if test="lastUpdateTime != null and '' != lastUpdateTime">
            and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createUser != null and '' != createUser">
            and create_user = #{createUser,jdbcType=INTEGER}
        </if>
        <if test="lastUpdateUser != null and '' != lastUpdateUser">
            and last_update_user = #{lastUpdateUser,jdbcType=INTEGER}
        </if>
        <if test="mountLevle != null">
            <choose>
                <when test="mountLevle == 1">
                    and (loan_amount  &gt; 0 and  loan_amount &lt;= 20)
                </when>
                <when test="mountLevle == 2">
                    and (loan_amount  &gt; 20 and  loan_amount &lt;= 50)
                </when>

                <when test="mountLevle == 3">
                    and (loan_amount  &gt; 50 and  loan_amount &lt;= 100)
                </when>
                <when test="mountLevle == 4">
                    and (loan_amount  &gt; 100 and  loan_amount &lt;= 500)
                </when>
                <when test="mountLevle == 5">
                    and (loan_amount  &gt; 500 )
                </when>
            </choose>
        </if>
        <choose>
            <when test="mainCitys.size() > 0 and subCompanyIds.size() == 0">
                and city in
                <foreach item="item" index="index" collection="mainCitys" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test="mainCitys.size() == 0 and subCompanyIds.size() > 0">
                and sub_company_id in
                <foreach item="item" index="index" collection="subCompanyIds" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <when test="mainCitys.size() > 0 and subCompanyIds.size() > 0">
                and(city in
                <foreach item="item" index="index" collection="mainCitys" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                OR
                sub_company_id in
                <foreach item="item" index="index" collection="subCompanyIds" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                )
            </when>
            <when test="mainCitys.size() == 0 and subCompanyIds.size() == 0">
                and city  is NULL
                and
                sub_company_id IS  NULL
            </when>
        </choose>
        <if test="utmList != null and utmList.size() > 0">
            and utm_source not IN
            <foreach item="item" index="index" collection="utmList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="paramsList!=null and paramsList.size>0">
            AND (cooperation_status IS NULL OR  cooperation_status NOT in
            <foreach item="item" index="index" collection="paramsList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        and is_deleted=0
    </select>
    <select id="customerSourceByGroup" resultType="String" parameterType="Map">
        select
        customer_source
        from customer_info
        where is_deleted = 0 GROUP BY customer_source
    </select>

    <update id="batchAllocate" parameterType="Map">
        update customer_info
        <set>
            <if test="lastUpdateUser != null and '' != lastUpdateUser">
                last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null ">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="own_user_name != null ">
                own_user_name = #{own_user_name,jdbcType=VARCHAR},
            </if>
            own_user_id = #{ownUserId,jdbcType=INTEGER}
        </set>
        where id in
        <foreach collection="paramsList" index="index" item="paramsList" open="(" separator="," close=")">
            #{paramsList}
        </foreach>
    </update>

    <update id="batchRemove" parameterType="Map">
        update customer_info
        <set>
            <if test="lastUpdateUser != null and '' != lastUpdateUser">
                last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null ">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="viewTime != null ">
                view_time = #{viewTime,jdbcType=TIMESTAMP},
            </if>
            own_user_id = -2,
            own_user_name = NULL,
            sub_company_id = 0,
            company_id= 0,
        </set>
        where id in
        <foreach collection="paramsList" index="index" item="paramsList" open="(" separator="," close=")">
            #{paramsList}
        </foreach>
    </update>

    <update id="batchUpdate" parameterType="Map">
        update customer_info
        <set>
            <if test="subcompanyId != null and '' != subcompanyId">
                sub_company_id = #{subcompanyId,jdbcType=INTEGER},
            </if>
            <if test="ownerUserId != null ">
                own_user_id = #{ownerUserId,jdbcType=INTEGER},
            </if>
            <if test="ownUserName != null ">
                own_user_name = #{ownUserName,jdbcType=VARCHAR},
            </if>
            <if test="receiveTime != null ">
                receive_time = #{receiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateTime != null ">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateUser != null and '' != lastUpdateUser">
            last_update_user = #{lastUpdateUser,jdbcType=INTEGER},
        </if>

        </set>
        where id in
        <foreach collection="paramsList" index="index" item="paramsList" open="(" separator="," close=")">
            #{paramsList}
        </foreach>
    </update>
    <select id="selectNonCommunicateInTime" resultMap="ResultMapWithBLOBs">
        SELECT
        a.*
        FROM
        customer_info a
        WHERE
        a.customer_type = '意向客户'
        AND a.own_user_id > 0
        AND TIMESTAMPDIFF(
        MINUTE,
        a.receive_time,
        NOW()
        ) > 15
        AND a.communicate_time IS NULL
    </select>

    <!--自动清洗数据计算-->
    <select id="countForAutoClean" resultType="map">
        SELECT count(*) as total,
        COUNT(CASE WHEN remain = 0 THEN 1 END) as unRemain,
        COUNT(CASE WHEN remain = 1 THEN 1 END) as isRemain
        FROM customer_info
    </select>

    <select id="selectByParams" resultMap="BaseResultMap" parameterType="Map">
        select <include refid="Base_Column_List"/>
        from customer_info
        <where>
            <if test=" null != eqPhone and '' != eqPhone ">
                AND telephonenumber = #{eqPhone}
            </if>
            <if test=" null != inPhone and '' != inPhone">
                AND telephonenumber IN (#{inPhone})
            </if>
            <if test=" null != remain">
                AND remain = #{remain}
            </if>
            <if test="null != inStatus">
                AND status IN
                <foreach item="item" index="index" collection="inStatus" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != ownUserId">
                AND own_user_id = #{ownUserId}
            </if>
            <if test="null != customerSource">
                AND customer_source = #{customerSource}
            </if>
            <if test="null != utmSource">
                AND utm_source = #{utmSource}
            </if>
            <if test="null != ids">
                AND id IN
                <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="selectForAutoClean" resultType="java.lang.Integer" parameterType="map">
        SELECT id FROM customer_info
        <where>
            <if test="null != level">
                AND customer_type = #{level}
            </if>
            <if test="null != remain">
                AND remain = #{remain}
            </if>
            <if test="null != excludeSources">
                AND customer_source NOT IN
                <foreach item="item" index="index" collection="excludeSources" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != notInOwnUserIds">
                AND own_user_id NOT IN
                <foreach item="item" index="index" collection="notInOwnUserIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != customerIds">
                AND id NOT IN
                <foreach item="item" index="index" collection="customerIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != receiveTime">
                <![CDATA[	and receive_time < #{receiveTime}  ]]>
            </if>
            AND own_user_id > 0
        </where>
    </select>


    <select id="getNewCustomer" resultMap="BaseResultMap" parameterType="Map">
        select *  FROM customer_info WHERE is_deleted = 0 AND (customer_source = #{wangluoyingxiao} OR  customer_source = #{androidyysc})
        AND create_time BETWEEN #{timeStart}
        AND #{timeEnd}
    </select>


    <select id="specialListByOffer" resultMap="BaseResultMap" parameterType="Map">
        select
        <include refid="cronus_column_List" />
        from customer_info
        where own_user_id =0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="city != null and '' != city">
            and city = #{city,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            and customer_name = #{customerName,jdbcType=VARCHAR}
        </if>
        <if test="customerSource != null and '' != customerSource">
            and customer_source = #{customerSource,jdbcType=VARCHAR}
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="houseStatus != null and '' != houseStatus">
            and house_status = #{houseStatus,jdbcType=VARCHAR}
        </if>
        <if test="cooperation_status != null and '' != cooperation_status">
            and cooperation_status = #{cooperation_status,jdbcType=VARCHAR}
        </if>
        <if test="companyId != null and '' != companyId">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeBegin != null and createTimeEnd !=null ">
            and date(create_time) between #{createTimeBegin} and #{createTimeEnd}
        </if>
        <if test="lastUpdateTime != null and '' != lastUpdateTime">
            and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createUser != null and '' != createUser">
            and create_user = #{createUser,jdbcType=INTEGER}
        </if>
        <if test="lastUpdateUser != null and '' != lastUpdateUser">
            and last_update_user = #{lastUpdateUser,jdbcType=INTEGER}
        </if>
        <if test="mountLevle != null">
            <choose>
                <when test="mountLevle == 1">
                    and (loan_amount  &gt; 0 and  loan_amount &lt;= 20)
                </when>
                <when test="mountLevle == 2">
                    and (loan_amount  &gt; 20 and  loan_amount &lt;= 50)
                </when>

                <when test="mountLevle == 3">
                    and (loan_amount  &gt; 50 and  loan_amount &lt;= 100)
                </when>
                <when test="mountLevle == 4">
                    and (loan_amount  &gt; 100 and  loan_amount &lt;= 500)
                </when>
                <when test="mountLevle == 5">
                    and (loan_amount  &gt; 500 )
                </when>
            </choose>
        </if>
        <if test="type ==null and utmFlag == null">
                and city in
                <foreach item="item" index="index" collection="mainCitys" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
        </if>
        <if test="type == 1">
            and city NOT in
            <foreach item="item" index="index" collection="mainCitys" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="utmList != null and utmList.size() > 0">
            and utm_source not IN
            <foreach item="item" index="index" collection="utmList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="paramsList!=null and paramsList.size>0">
            AND (cooperation_status IS NULL OR cooperation_status NOT in
            <foreach item="item" index="index" collection="paramsList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        and is_deleted=0
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by last_update_time desc
            </otherwise>
        </choose>
        limit ${start},${size}
    </select>

    <select id="specialListByOfferCount" resultType="Integer" parameterType="Map">
        select
        COUNT(*)
        from customer_info
        where own_user_id =0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="city != null and '' != city">
            and city = #{city,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            and customer_name = #{customerName,jdbcType=VARCHAR}
        </if>
        <if test="customerSource != null and '' != customerSource">
            and customer_source = #{customerSource,jdbcType=VARCHAR}
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="houseStatus != null and '' != houseStatus">
            and house_status = #{houseStatus,jdbcType=VARCHAR}
        </if>
        <if test="cooperation_status != null and '' != cooperation_status">
            and cooperation_status = #{cooperation_status,jdbcType=VARCHAR}
        </if>
        <if test="companyId != null and '' != companyId">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeBegin != null and createTimeEnd !=null ">
            and date(create_time) between #{createTimeBegin} and #{createTimeEnd}
        </if>
        <if test="lastUpdateTime != null and '' != lastUpdateTime">
            and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createUser != null and '' != createUser">
            and create_user = #{createUser,jdbcType=INTEGER}
        </if>
        <if test="lastUpdateUser != null and '' != lastUpdateUser">
            and last_update_user = #{lastUpdateUser,jdbcType=INTEGER}
        </if>
        <if test="mountLevle != null">
            <choose>
                <when test="mountLevle == 1">
                    and (loan_amount  &gt; 0 and  loan_amount &lt;= 20)
                </when>
                <when test="mountLevle == 2">
                    and (loan_amount  &gt; 20 and  loan_amount &lt;= 50)
                </when>

                <when test="mountLevle == 3">
                    and (loan_amount  &gt; 50 and  loan_amount &lt;= 100)
                </when>
                <when test="mountLevle == 4">
                    and (loan_amount  &gt; 100 and  loan_amount &lt;= 500)
                </when>
                <when test="mountLevle == 5">
                    and (loan_amount  &gt; 500 )
                </when>
            </choose>
        </if>
        <if test="type ==null">
            and city  in
            <foreach item="item" index="index" collection="mainCitys" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="type == 1">
            and city NOT in
            <foreach item="item" index="index" collection="mainCitys" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="utmList != null and utmList.size() > 0">
            and utm_source not IN
            <foreach item="item" index="index" collection="utmList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="paramsList!=null and paramsList.size>0">
            AND (cooperation_status IS NULL OR cooperation_status NOT in
            <foreach item="item" index="index" collection="paramsList" open="("
                     separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        and is_deleted=0
    </select>

    <select id="utmCustomerList" resultMap="BaseResultMap" parameterType="Map">
        select sex,
        <include refid="cronus_column_List" />
        from customer_info
        where is_deleted=0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            AND  customer_name  like CONCAT(#{customerName},'%' )
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="customerType != null and '' != customerType">
            and customer_type = #{customerType,jdbcType=VARCHAR}
        </if>
        <if test="cooperationStatus != null and '' != cooperationStatus">
            and cooperation_status = #{cooperationStatus,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart != null and createTimeEnd != null">
            and create_time  &gt;= #{createTimeStart} and  create_time &lt;= #{createTimeEnd}
        </if>
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by last_update_time desc
            </otherwise>
        </choose>
        limit ${start},${size}
    </select>
    <select id="utmCustomerListCount" resultType="Integer" parameterType="Map">
        select
        COUNT(*)
        from customer_info
        where is_deleted=0
        <if test="telephonenumber != null and '' != telephonenumber">
            and telephonenumber = #{telephonenumber,jdbcType=VARCHAR}
        </if>
        <if test="customerName != null and '' != customerName">
            AND  customer_name  like CONCAT(#{customerName},'%' )
        </if>
        <if test="utmSource != null and '' != utmSource">
            and utm_source = #{utmSource,jdbcType=VARCHAR}
        </if>
        <if test="cooperationStatus != null and '' != cooperationStatus">
            and cooperation_status = #{cooperationStatus,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart!=null and createTimeEnd!=null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="customerType != null and '' != customerType">
            and customer_type = #{customerType,jdbcType=VARCHAR}
        </if>
    </select>
   <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into customer_info (telephonenumber, customer_name,
        customer_type, customer_level, spare_phone,
        age, marriage, id_card,
        province_huji, sex, customer_address,
        customer_street, house_status, house_amount,
        house_type, house_value, house_area,
        house_age, house_loan, house_alone,
        house_location, city, customer_classify,
        callback_status, callback_time, sub_company_id,
        house_loan_value, create_time, last_update_time,
        create_user, last_update_user, is_deleted,
        expect_money_time, expect_loan_time, expect_repayment_way,
        house_clear, house_owner, mortgage_amount,
        mortgae_month, is_hava_car, car_worth,
        car_age, is_hava_insurance, year_pay_amount,
        insurance_time, is_hava_debt, debt_money,
        debt_month, debt_overdue, debt_overdue_money,
        debt_time, work_status, wager_card,
        entry_time, company_type, social_security,
        social_money, social_time, provident_fund,
        provident_money, provident_time, compny_name,
        fixed_phone, loan_amount, customer_source,
        utm_source, own_user_id, own_user_name,
        receive_time, circle, company_id,
        retirement_wages, level, remain,
        view_time, view_uid, view_count,
        autostatus, first_communicate_time, first_allocate_time,
        cooperation_status, confirm, click_communicate_button,
        communicate_time, communicate_id, receive_id,
        per_description, employed_info, ext
        )
        values
       <foreach collection="list" item="customerInfo" index="index" separator=",">
       <trim prefix="(" suffix=")" suffixOverrides=",">
        #{customerInfo.telephonenumber},
        #{customerInfo.customerName},
        #{customerInfo.customerType},
        #{customerInfo.customerLevel},
        #{customerInfo.sparePhone},
        #{customerInfo.age},
        #{customerInfo.marriage},
        #{customerInfo.idCard},
        #{customerInfo.provinceHuji},
        #{customerInfo.sex},
        #{customerInfo.customerAddress},
        #{customerInfo.customerStreet},
        #{customerInfo.houseStatus},
        #{customerInfo.houseAmount},
        #{customerInfo.houseType},
        #{customerInfo.houseValue},
        #{customerInfo.houseArea},
        #{customerInfo.houseAge},
        #{customerInfo.houseLoan},
        #{customerInfo.houseAlone},
        #{customerInfo.houseLocation},
        #{customerInfo.city},
        #{customerInfo.customerClassify},
        #{customerInfo.callbackStatus},
        #{customerInfo.callbackTime},
        #{customerInfo.subCompanyId},
        #{customerInfo.houseLoanValue},
        #{customerInfo.createTime},
        #{customerInfo.lastUpdateTime},
        #{customerInfo.createUser},
        #{customerInfo.lastUpdateUser},
        #{customerInfo.isDeleted},
        #{customerInfo.expectMoneyTime},
        #{customerInfo.expectLoanTime},
        #{customerInfo.expectRepaymentWay},
        #{customerInfo.houseClear},
        #{customerInfo.houseOwner},
        #{customerInfo.mortgageAmount},
        #{customerInfo.mortgaeMonth},
        #{customerInfo.isHavaCar},
        #{customerInfo.carWorth},
        #{customerInfo.carAge},
        #{customerInfo.isHavaInsurance},
        #{customerInfo.yearPayAmount},
        #{customerInfo.insuranceTime},
        #{customerInfo.isHavaDebt},
        #{customerInfo.debtMoney},
        #{customerInfo.debtMonth},
        #{customerInfo.debtOverdue},
        #{customerInfo.debtOverdueMoney},
        #{customerInfo.debtTime},
        #{customerInfo.workStatus},
        #{customerInfo.wagerCard},
        #{customerInfo.entryTime},
        #{customerInfo.companyType},
        #{customerInfo.socialSecurity},
        #{customerInfo.socialMoney},
        #{customerInfo.socialTime},
        #{customerInfo.providentFund},
        #{customerInfo.providentMoney},
        #{customerInfo.providentTime},
        #{customerInfo.compnyName},
        #{customerInfo.fixedPhone},
        #{customerInfo.loanAmount},
        #{customerInfo.customerSource},
        #{customerInfo.utmSource},
        #{customerInfo.ownUserId},
        #{customerInfo.ownUserName},
        #{customerInfo.receiveTime},
        #{customerInfo.circle},
        #{customerInfo.companyId},
        #{customerInfo.retirementWages},
        #{customerInfo.level},
        #{customerInfo.remain},
        #{customerInfo.viewTime},
        #{customerInfo.viewUid},
        #{customerInfo.viewCount},
        #{customerInfo.autostatus},
        #{customerInfo.firstCommunicateTime},
        #{customerInfo.firstAllocateTime},
        #{customerInfo.cooperationStatus},
        #{customerInfo.confirm},
        #{customerInfo.clickCommunicateButton},
        #{customerInfo.communicateTime},
        #{customerInfo.communicateId},
        #{customerInfo.receiveId},
        #{customerInfo.perDescription},
        #{customerInfo.employedInfo},
        #{customerInfo.ext}
       </trim>
       </foreach>
    </insert>

    <!-- 根据电话号码查询查询客户信息 -->
    <select id="selectCustomerDTOByPhone" resultMap="CustomerResultDTO" parameterType="com.fjs.cronus.dto.CustomerPartDTO">
      SELECT
        id,customer_source,utm_source,city,create_time
      FROM customer_info
      WHERE is_deleted = 0 AND telephonenumber = #{phone,jdbcType=VARCHAR}
    </select>

    <select id="selectCustomerById" resultMap="CustomerBasicDTO" parameterType="com.fjs.cronus.dto.CustomerBasicDTO">
      SELECT
        id,telephonenumber,customer_source
      FROM customer_info
      WHERE is_deleted = 0 AND id = #{id,jdbcType=INTEGER}
    </select>

    <update id="updateCustomersFromDiscard" parameterType="Map">
        update customer_info c set c.own_user_id = 0,c.view_time = NULL
        where id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="getCustomerPush" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT * FROM customer_info WHERE is_deleted = 0 AND own_user_id = #{ownerId} and is_push = 0
    </select>



   <select id="businessPoolList" resultMap="businessPool" parameterType="java.util.Map">
          SELECT
        ci.id,
        ci.customer_name,
        ci.loan_amount,
        ci.house_status,
        ci.customer_source,
        ci.utm_source,
        ci.city,
        ci.create_time,
        ci.media_customer_count_id,
        cp.accounting_method,
        cp.prepurchase_price,
        cp.commission_rate,
        cp.loan_rate
        FROM
        customer_info ci
        LEFT JOIN customer_price cp ON ci.id = cp.customer_info_id
        AND cp.is_deleted = 0
        AND cp.is_close = 0
        WHERE
        ci.is_deleted = 0
        AND ci.own_user_id = -1
        <if test="nameOrTelephone != null and nameOrTelephone != ''">
            AND (ci.customer_name LIKE CONCAT('%',#{nameOrTelephone},'%' ) OR ci.telephonenumber LIKE CONCAT('%',#{nameOrTelephone},'%' ))
        </if>
       <if test="customerSource != null and customerSource != ''">
           AND ci.customer_source = #{customerSource}
       </if>
       <if test="utmSource != null and utmSource != ''">
           AND ci.utm_source LIKE CONCAT('%',#{utmSource},'%' )
       </if>
       <if test="houseStatus != null and houseStatus != '' and houseStatus == '有'.toString()">
           AND ci.house_status = #{houseStatus}
       </if>
       <if test="houseStatus != null and houseStatus != '' and houseStatus == '无'.toString()">
           AND ci.house_status is NULL
       </if>
       <if test="loanAmount != null and loanAmount != ''">
           AND ci.loan_amount >= #{loanAmount}
       </if>
       <if test="loanAmountStart != null and loanAmountStart != '' and loanAmountEnd != null and loanAmountEnd != ''">
           AND ci.loan_amount BETWEEN #{loanAmountStart} AND #{loanAmountEnd}
       </if>
       <if test="city != null and city != ''">
           AND ci.city = #{city}
       </if>
       <if test="createTime != null and createTime != '' and createTimeEnd != null and createTimeEnd != ''">
           AND ci.create_time BETWEEN #{createTime} AND #{createTimeEnd}
       </if>
       ORDER BY ci.create_time DESC LIMIT #{page},#{size}
        </select>


   <select id="businessPoolListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        COUNT(*)
        FROM
        customer_info ci
        LEFT JOIN customer_price cp ON ci.id = cp.customer_info_id
        AND cp.is_deleted = 0
        AND cp.is_close = 0
        WHERE
        ci.is_deleted = 0
        AND ci.own_user_id = -1
        <if test="nameOrTelephone != null and nameOrTelephone != ''">
            AND (ci.customer_name LIKE CONCAT('%',#{nameOrTelephone},'%' ) OR ci.telephonenumber LIKE CONCAT('%',#{nameOrTelephone},'%' ))
        </if>
        <if test="customerSource != null and customerSource != ''">
            AND ci.customer_source = #{customerSource}
        </if>
        <if test="utmSource != null and utmSource != ''">
            AND ci.utm_source LIKE CONCAT('%',#{utmSource},'%' )
        </if>
        <if test="houseStatus != null and houseStatus != '' and houseStatus == '有'.toString()">
            AND ci.house_status = #{houseStatus}
        </if>
        <if test="houseStatus != null and houseStatus != '' and houseStatus == '无'.toString()">
            AND ci.house_status is NULL
        </if>
       <if test="loanAmount != null and loanAmount != ''">
           AND ci.loan_amount >= #{loanAmount}
       </if>
        <if test="loanAmountStart != null and loanAmountStart != '' and loanAmountEnd != null and loanAmountEnd != ''">
            AND ci.loan_amount BETWEEN #{loanAmountStart} AND #{loanAmountEnd}
        </if>
        <if test="city != null and city != ''">
            AND ci.city = #{city}
        </if>
        <if test="createTime != null and createTime != '' and createTimeEnd != null and createTimeEnd != ''">
            AND ci.create_time BETWEEN #{createTime} AND #{createTimeEnd}
        </if>
        ORDER BY ci.create_time DESC LIMIT #{page},#{size}
   </select>




    <select id="bCustomerList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="cronus_column_List" />
        from customer_info  c
        WHERE  c.is_deleted = 0
        <if test="customerName !=null and customerName !=''">
            and c.customer_name  like CONCAT(#{customerName},'%' )
        </if>
        <if test="telephonenumber != null and telephonenumber!=''">
            AND c.telephonenumber = #{telephonenumber}
        </if>
        <if test="utmSource != null and utmSource != '' ">
            and c.utm_source = #{utmSource}
        </if>
        <if test="utmSources != null and utmSources.size > 0">
            and c.utm_source IN
            <foreach collection="utmSources" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="cooperationStatus != null and cooperationStatus != '' ">
            and c.cooperation_status = #{cooperationStatus}
        </if>
        <if test="houseStatus != null and houseStatus != '' and houseStatus == '有'.toString()">
            and (c.house_status = '有' or c.house_status = '是')
        </if>
        <if test="houseStatus != null and houseStatus != '' and houseStatus == '无'.toString()">
            and (c.house_status = '无' or c.house_status = '无')
        </if>
        <if test="ownUserName != null and ownUserName != '' ">
            and c.own_user_name = #{ownUserName}
        </if>
        <if test="customerSource != null and customerSource != '' ">
            and c.customer_source = #{customerSource}
        </if>
        <if test="createTimeStart != null and createTimeEnd != null">
            and c.create_time BETWEEN #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="circle != null  ">
            and c.circle = #{circle,}
        </if>
        <if test="companyId != null ">
            and c.company_id = #{companyId}
        </if>

        <if test="remain != null ">
            and c.remain = #{remain}
        </if>
        <if test="loanAmount != null and loanAmount ==0 ">
            and c.loan_amount = 0
        </if>
        <if test="loanAmount != null and loanAmount ==1 ">
            and c.loan_amount &lt;= 5 and c.loan_amount &gt; 0
        </if>
        <if test="loanAmount != null and loanAmount ==2 ">
            and c.loan_amount &lt;= 10 and c.loan_amount &gt; 5
        </if>
        <if test="loanAmount != null and loanAmount ==3 ">
            and c.loan_amount &lt;= 50 and c.loan_amount &gt; 10
        </if>
        <if test="loanAmount != null and loanAmount ==4 ">
            and c.loan_amount &lt;= 100 and c.loan_amount &gt; 50
        </if>
        <if test="loanAmount != null and loanAmount ==5 ">
            and c.loan_amount &lt;= 500 and c.loan_amount &gt; 100
        </if>
        <if test="loanAmount != null and loanAmount ==6 ">
            and c.loan_amount &gt; 500
        </if>
        <if test="level != null ">
            and c.customer_type = #{level}
        </if>
        <if test="owerId!=null and owerId.size>0">
            AND c.own_user_id in
            <foreach collection="owerId" item="owerId"
                     index="index" open="(" close=")" separator=",">
                ${owerId}
            </foreach>
        </if>
        <if test="cooperation_status!=null and cooperation_status.size>0">
            AND c.cooperation_status in
            <foreach item="item" index="index" collection="cooperation_status" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="communication_order!=null">
            <choose>
                <when test="communication_order == 0">
                    and c.communicate_time is NULL
                </when>
                <when test="communication_order == 1">
                    and c.communicate_time is NOT NULL and c.confirm = 1
                </when>
                <when test="communication_order == 2">
                    and c.communicate_time is NOT NULL and c.confirm = 2
                </when>
            </choose>
        </if>
        <choose>
            <when test="order != null and order !=''">
                order by ${order}
            </when>
            <otherwise>
                order by c.create_time desc
            </otherwise>
        </choose>
        limit #{start},#{size}
    </select>

  <select id="getCustomer" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT * FROM customer_info WHERE is_deleted = 0 AND own_user_id = -1 AND id = #{customerId}
  </select>


</mapper>